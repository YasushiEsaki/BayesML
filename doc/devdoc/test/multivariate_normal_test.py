import numpy as np
import _multivariatenormal

model2_1 = _multivariatenormal.GenModel()
X = model2_1.gen_sample(10000)

model_1 = _multivariatenormal.LearnModel()
model_1.update_posterior(X)
print(model_1.get_hn_params())
print(f"sigma={np.linalg.inv(model_1.hn_V*model_1.hn_nu)}")
model_1.visualize_posterior(n=1000)

model2 = _multivariatenormal.GenModel()
model2.gen_params()
print(model2.get_params())
X = model2.gen_sample(100000)
model = _multivariatenormal.LearnModel()
model.update_posterior(X)
print(model.get_hn_params())
print(f"sigma={np.linalg.inv(model.hn_V*model.hn_nu)}")
model.visualize_posterior(n=100000)

model2_2 = _multivariatenormal.GenModel()
model2_2.gen_params()
print(model2_2.get_params())
X1 = model2_2.gen_sample(10000)
X2 = model2_2.gen_sample(10000)
X3 = model2_2.gen_sample(10000)
model_2 = _multivariatenormal.LearnModel()
model_2.update_posterior(X1)
print(model_2.get_hn_params())
print(f"sigma={np.linalg.inv(model_2.hn_V*model_2.hn_nu)}")
model_2.update_posterior(X2)
print(model_2.get_hn_params())
print(f"sigma={np.linalg.inv(model_2.hn_V*model_2.hn_nu)}")
model_2.update_posterior(X3)
print(model_2.get_hn_params())
print(f"sigma={np.linalg.inv(model_2.hn_V*model_2.hn_nu)}")
model_2.visualize_posterior(n=40000)